{"version":3,"sources":["components/Contact.js","components/BigHero.js","components/About.js","components/Portfolio.js","components/Display.js","components/Nav.js","reducers/display.js","reducers/index.js","actions/types.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Contact","className","href","target","rel","name","connect","state","showAbout","display","options","strings","autoStart","loop","About","aboutRefIn","useRef","bigHeroRefIn","useEffect","gsap","from","current","y","delay","ease","opacity","ref","Portfolio","portfolioRefIn","useState","snowboundOpen","diamondsOpen","codeWarsOpen","isOpen","setOpen","onClick","e","preventDefault","innerHTML","showPortfolio","dispatch","togglePortfolio","type","undefined","toggleAbout","toggleProfile","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f13a69a7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Contact = () => (\r\n    <div className='contact'>\r\n        <ul className='contact__list'>\r\n            <li className='contact__list-item'>\r\n                <a\r\n                    href='https://www.linkedin.com/in/christopher-berg-159b23b5/'\r\n                    target='_blank'\r\n                    rel='noopener noreferrer'\r\n                >\r\n                    <ion-icon name='logo-linkedin'></ion-icon>\r\n                </a>\r\n            </li>\r\n            <li className='contact__list-item'>\r\n                <a\r\n                    href='https://github.com/BergC'\r\n                    target='_blank'\r\n                    rel='noopener noreferrer'\r\n                >\r\n                    <ion-icon name='logo-github'></ion-icon>\r\n                </a>\r\n            </li>\r\n            <li className='contact__list-item'>\r\n                <a\r\n                    href='https://stackoverflow.com/users/11904900/paoiherpoais'\r\n                    target='_blank'\r\n                    rel='noopener noreferrer'\r\n                >\r\n                    <ion-icon name='logo-stackoverflow'></ion-icon>\r\n                </a>\r\n            </li>\r\n            <li className='contact__list-item'>\r\n                <a href='mailto:christophertberg@gmail.com'>\r\n                    <ion-icon name='mail'></ion-icon>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Typewriter from 'typewriter-effect';\r\n\r\nconst BigHero = ({ showAbout }) => {\r\n    return (\r\n        <div className='bighero'>\r\n            <h1 className='bighero__header'>\r\n                <Typewriter\r\n                    options={{\r\n                        strings: [\r\n                            'chris berg',\r\n                            'skiier',\r\n                            'developer',\r\n                            'ramen chef',\r\n                            'beer brewer',\r\n                            'mountain biker',\r\n                            'gamer',\r\n                            'water baby',\r\n                        ],\r\n                        autoStart: true,\r\n                        loop: true,\r\n                    }}\r\n                />\r\n            </h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    showAbout: state.display.showAbout,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BigHero);\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\nimport BigHero from './BigHero';\r\n\r\nconst About = () => {\r\n    const aboutRefIn = useRef(null);\r\n    const bigHeroRefIn = useRef(null);\r\n\r\n    useEffect(() => {\r\n        gsap.from(aboutRefIn.current, 0.8, {\r\n            y: 300,\r\n            delay: 0.8,\r\n            ease: 'power1.out',\r\n            opacity: 0,\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        gsap.from(bigHeroRefIn.current, 0.8, {\r\n            y: -100,\r\n            delay: 0.8,\r\n            ease: 'power1.out',\r\n            opacity: 0,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className='about'>\r\n            <div ref={bigHeroRefIn}>\r\n                <BigHero />\r\n            </div>\r\n\r\n            <div ref={aboutRefIn} className='wrapper__content'>\r\n                <p className='about__text'>\r\n                    While the majority of my middle school and high school\r\n                    courses are a blur, I can vividly remember when my best\r\n                    friend, who coincidentally also lives in Seattle, and I\r\n                    filled a blank in our schedule with a Web Development class.\r\n                    We were only introduced to the basics of HTML and CSS, but I\r\n                    can remember the pride I felt building something with a\r\n                    computer.\r\n                </p>\r\n\r\n                <p className='about__text'>\r\n                    Time went on and I applied to college with no idea what I\r\n                    wanted to do with my life. I defaulted to finance and\r\n                    economics, though I spent my free time taking introductory\r\n                    coding courses.\r\n                </p>\r\n\r\n                <p className='about__text'>\r\n                    Within a year of graduating college I knew I wanted to\r\n                    commit myself to a career change and began completing\r\n                    regimented coding coursework. I would like to state that I\r\n                    don't regret the path I took, my degree has provided me with\r\n                    a steady income and the ability to work with hundreds of\r\n                    brilliant founders and upper-level managers at startups\r\n                    across the U.S.\r\n                </p>\r\n\r\n                <p className='about__text'>\r\n                    Currently I'm spending my free time learning about\r\n                    Artificial Neural Networks (\"ANN\") and how to build them\r\n                    using Python. I'm fascinated by the potential of ANNs and I\r\n                    have much to learn.\r\n                </p>\r\n\r\n                <p className='about__text'>\r\n                    I'm driven to change my career and will succeed in my\r\n                    pursuit of knowledge and happiness.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","// Import packages.\r\nimport React, { Fragment, useRef, useEffect, useState } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\nconst Portfolio = () => {\r\n    // useRef hook used so that our GSAP transitions know what element to apply transitions to.\r\n    const portfolioRefIn = useRef(null);\r\n\r\n    // useEffect hook used to apply our GSAP transitions.\r\n    useEffect(() => {\r\n        gsap.from(portfolioRefIn.current, 0.8, {\r\n            y: 150,\r\n            delay: 0.7,\r\n            ease: 'power1.out',\r\n            opacity: 0,\r\n        });\r\n    }, []);\r\n\r\n    // useState hook used to display / hide our portfolio accordion.\r\n    const [isOpen, setOpen] = useState({\r\n        snowboundOpen: false,\r\n        diamondsOpen: false,\r\n        codeWarsOpen: false,\r\n    });\r\n\r\n    const { snowboundOpen, diamondsOpen, codeWarsOpen } = isOpen;\r\n\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n        const target = e.target.innerHTML;\r\n\r\n        if (target === 'Snowbound') {\r\n            setOpen({\r\n                ...isOpen,\r\n                snowboundOpen: !snowboundOpen,\r\n            });\r\n        } else if (target === 'Diamonds Discovered') {\r\n            setOpen({\r\n                ...isOpen,\r\n                diamondsOpen: !diamondsOpen,\r\n            });\r\n        } else if (target === 'Code Wars') {\r\n            setOpen({\r\n                ...isOpen,\r\n                codeWarsOpen: !codeWarsOpen,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div ref={portfolioRefIn}>\r\n                <div className='portfolio__project'>\r\n                    <h3 onClick={onClick}>\r\n                        <sup className='portfolio__project-num'>01</sup>\r\n                        <span\r\n                            className={\r\n                                snowboundOpen\r\n                                    ? 'portfolio__project-title--open'\r\n                                    : 'portfolio__project-title'\r\n                            }\r\n                        >\r\n                            Snowbound\r\n                        </span>\r\n                    </h3>\r\n\r\n                    {snowboundOpen ? (\r\n                        <div className='portfolio__project-detail-wrapper'>\r\n                            <div className='portfolio__project-detail'>\r\n                                <h4>Purpose</h4>\r\n                                <p>\r\n                                    Fetch the snow and weather conditions for\r\n                                    nearby mountains.\r\n                                </p>\r\n                            </div>\r\n\r\n                            <div className='portfolio__project-detail'>\r\n                                <h4>Inspiration</h4>\r\n                                <p>\r\n                                    I'm an avid skiier and have found that\r\n                                    Washington has so many mountains in driving\r\n                                    distance. I always disliked having to Google\r\n                                    the conditions at every accessible mountain\r\n                                    individually, so I decided to built a tool\r\n                                    that would compile weather and snow data in\r\n                                    a single location.\r\n                                </p>\r\n                            </div>\r\n\r\n                            <div className='portfolio__project-detail'>\r\n                                <h4>Tools</h4>\r\n                                <p>\r\n                                    Node.js | React.js | GSAP | Bootstrap |\r\n                                    Express | MongoDB | mLab | Heroku | Sass |\r\n                                    Mongoose | Axios | Redux | Font Awesome\r\n                                </p>\r\n                            </div>\r\n\r\n                            <a\r\n                                href='https://bergc-snowbound.herokuapp.com/'\r\n                                target='_blank'\r\n                                rel='noopener noreferrer'\r\n                            >\r\n                                <button className='bighero__button'>Go</button>\r\n                            </a>\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n\r\n                <div className='portfolio__project'>\r\n                    <h3 onClick={onClick}>\r\n                        <sup className='portfolio__project-num'>02</sup>\r\n                        <span\r\n                            className={\r\n                                diamondsOpen\r\n                                    ? 'portfolio__project-title--open'\r\n                                    : 'portfolio__project-title'\r\n                            }\r\n                        >\r\n                            Diamonds Discovered\r\n                        </span>\r\n                    </h3>\r\n\r\n                    {diamondsOpen ? (\r\n                        <div className='portfolio__project-detail-wrapper'>\r\n                            <div className='portfolio__project-detail'>\r\n                                <h4>Purpose</h4>\r\n                                <p>\r\n                                    Fetch diamond prices from multiple sources\r\n                                    based upon user provided criteria.\r\n                                </p>\r\n                            </div>\r\n\r\n                            <div className='portfolio__project-detail'>\r\n                                <h4>Inspiration</h4>\r\n                                <p>\r\n                                    I recently proposed to my girlfriend, but\r\n                                    before proposing I had no idea how to buy a\r\n                                    ring. More importantly, I had no idea how to\r\n                                    buy a ring efficiently. I wanted the highest\r\n                                    quality at the lowest cost. After reading up\r\n                                    on the 4c's and snooping around several big\r\n                                    name online wholesalers, I found there were\r\n                                    discrepancies in price across the platforms\r\n                                    despite displaying similarly graded\r\n                                    diamonds. I wanted to be able to search them\r\n                                    all simultaneously and figure out which was\r\n                                    best priced.\r\n                                </p>\r\n                            </div>\r\n\r\n                            <div className='portfolio__project-detail'>\r\n                                <h4>Tools</h4>\r\n                                <p>\r\n                                    Node.js | React.js | Express | MongoDB |\r\n                                    mLab | Heroku | Sass | Node Fetch | Axios |\r\n                                    Mongoose | jQuery | Redux | Moment | Font\r\n                                    Awesome\r\n                                </p>\r\n                            </div>\r\n\r\n                            <a\r\n                                href='https://bergc-diamondcost.herokuapp.com/'\r\n                                target='_blank'\r\n                                rel='noopener noreferrer'\r\n                            >\r\n                                <button className='bighero__button'>Go</button>\r\n                            </a>\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n\r\n                <div className='portfolio__project'>\r\n                    <h3 onClick={onClick}>\r\n                        <sup className='portfolio__project-num'>03</sup>\r\n                        <span\r\n                            className={\r\n                                codeWarsOpen\r\n                                    ? 'portfolio__project-title--open'\r\n                                    : 'portfolio__project-title'\r\n                            }\r\n                        >\r\n                            Code Wars\r\n                        </span>\r\n                    </h3>\r\n\r\n                    {codeWarsOpen ? (\r\n                        <div className='portfolio__project-detail-wrapper'>\r\n                            <div className='portfolio__project-detail'>\r\n                                <h4>Purpose</h4>\r\n                                <p>Practice my basic coding skills.</p>\r\n                            </div>\r\n\r\n                            <div className='portfolio__project-detail'>\r\n                                <h4>Inspiration</h4>\r\n                                <p>\r\n                                    I wanted to make sure that I was taking time\r\n                                    to challenge myself with problems created by\r\n                                    others. I also wanted to ensure that I\r\n                                    didn't forget what I was learning, after all\r\n                                    practice makes perfect.\r\n                                </p>\r\n                            </div>\r\n\r\n                            <div className='portfolio__project-detail'>\r\n                                <h4>Tools</h4>\r\n                                <p>JavaScrtipt | Python</p>\r\n                            </div>\r\n\r\n                            <a\r\n                                href='https://www.codewars.com/users/paosiehf'\r\n                                target='_blank'\r\n                                rel='noopener noreferrer'\r\n                            >\r\n                                <button className='bighero__button'>Go</button>\r\n                            </a>\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport About from './About';\r\nimport BigHero from './BigHero';\r\nimport Portfolio from './Portfolio';\r\n\r\nconst Display = ({ showPortfolio, showAbout, togglePortfolio }) => (\r\n    <Fragment>\r\n        {!showPortfolio && !showAbout && (\r\n            <Fragment>\r\n                <BigHero />\r\n\r\n                <button\r\n                    className='bighero__button'\r\n                    onClick={() => togglePortfolio()}\r\n                >\r\n                    See Stuff\r\n                </button>\r\n            </Fragment>\r\n        )}\r\n\r\n        {showPortfolio && <Portfolio />}\r\n\r\n        {showAbout && <About />}\r\n    </Fragment>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    showPortfolio: state.display.showPortfolio,\r\n    showAbout: state.display.showAbout,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    togglePortfolio: () => dispatch({ type: 'TOGGLE_PORTFOLIO' }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Nav = ({ toggleAbout, toggleProfile }) => (\r\n    <nav className='nav'>\r\n        <ul className='nav__list'>\r\n            <li className='nav__list-item' onClick={() => toggleProfile()}>\r\n                Portfolio\r\n            </li>\r\n            <li className='nav__list-item' onClick={() => toggleAbout()}>\r\n                About\r\n            </li>\r\n            <li className='nav__list-item'>\r\n                <a href='mailto:christophertberg@gmail.com'>Contact</a>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    toggleAbout: () => dispatch({ type: 'TOGGLE_ABOUT' }),\r\n    toggleProfile: () => dispatch({ type: 'TOGGLE_PORTFOLIO' }),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Nav);\r\n","import { TOGGLE_PORTFOLIO, TOGGLE_ABOUT } from '../actions/types';\r\n\r\nconst initialState = {\r\n    showPortfolio: false,\r\n    showAbout: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type } = action;\r\n\r\n    switch (type) {\r\n        case TOGGLE_PORTFOLIO:\r\n            return {\r\n                ...state,\r\n                showPortfolio: true,\r\n                showAbout: false,\r\n            };\r\n\r\n        case TOGGLE_ABOUT:\r\n            return {\r\n                ...state,\r\n                showPortfolio: false,\r\n                showAbout: true,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport display from './display';\r\n\r\nexport default combineReducers({ display });\r\n","export const TOGGLE_PORTFOLIO = 'TOGGLE_PORTFOLIO';\r\nexport const TOGGLE_ABOUT = 'TOGGLE_ABOUT';\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\n// Styles\r\nimport './App.scss';\r\n\r\n// Components\r\nimport Contact from './components/Contact';\r\nimport Display from './components/Display';\r\nimport Nav from './components/Nav';\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <div className='wrapper'>\r\n            <Nav />\r\n\r\n            <div>\r\n                <Display />\r\n            </div>\r\n\r\n            <Contact />\r\n        </div>\r\n    </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}